package RatingRulesLanguage.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myServiceProvider__BehaviorDescriptor = new ServiceProvider__BehaviorDescriptor();
  private final BHDescriptor myModOfTransportation__BehaviorDescriptor = new ModOfTransportation__BehaviorDescriptor();
  private final BHDescriptor myRoute__BehaviorDescriptor = new Route__BehaviorDescriptor();
  private final BHDescriptor myWeekDay__BehaviorDescriptor = new WeekDay__BehaviorDescriptor();
  private final BHDescriptor myRecurrenceCriteriaDef__BehaviorDescriptor = new RecurrenceCriteriaDef__BehaviorDescriptor();
  private final BHDescriptor myConcessionDeclaration__BehaviorDescriptor = new ConcessionDeclaration__BehaviorDescriptor();
  private final BHDescriptor myProductDeclaration__BehaviorDescriptor = new ProductDeclaration__BehaviorDescriptor();
  private final BHDescriptor myProductFamilyDeclaration__BehaviorDescriptor = new ProductFamilyDeclaration__BehaviorDescriptor();
  private final BHDescriptor myLocationDeclaration__BehaviorDescriptor = new LocationDeclaration__BehaviorDescriptor();
  private final BHDescriptor myLocationReference__BehaviorDescriptor = new LocationReference__BehaviorDescriptor();
  private final BHDescriptor myBaseConceptOrgCollectionBlock__BehaviorDescriptor = new BaseConceptOrgCollectionBlock__BehaviorDescriptor();
  private final BHDescriptor myBaseConceptOrgCollectionWithUniqueID__BehaviorDescriptor = new BaseConceptOrgCollectionWithUniqueID__BehaviorDescriptor();
  private final BHDescriptor myBaseFloatFunctionDefinition__BehaviorDescriptor = new BaseFloatFunctionDefinition__BehaviorDescriptor();
  private final BHDescriptor myUDFReference__BehaviorDescriptor = new UDFReference__BehaviorDescriptor();
  private final BHDescriptor myUDCReference__BehaviorDescriptor = new UDCReference__BehaviorDescriptor();
  private final BHDescriptor myConstantFloatValue__BehaviorDescriptor = new ConstantFloatValue__BehaviorDescriptor();
  private final BHDescriptor myBaseConstant__BehaviorDescriptor = new BaseConstant__BehaviorDescriptor();
  private final BHDescriptor myConstantTypedVarDeclaration__BehaviorDescriptor = new ConstantTypedVarDeclaration__BehaviorDescriptor();
  private final BHDescriptor myConstantFloatVarDeclaration__BehaviorDescriptor = new ConstantFloatVarDeclaration__BehaviorDescriptor();
  private final BHDescriptor myConstantPointToPointVarDeclaration__BehaviorDescriptor = new ConstantPointToPointVarDeclaration__BehaviorDescriptor();
  private final BHDescriptor myBaseNumericFunctionDef__BehaviorDescriptor = new BaseNumericFunctionDef__BehaviorDescriptor();
  private final BHDescriptor myFloatFarePriceCalculationFct__BehaviorDescriptor = new FloatFarePriceCalculationFct__BehaviorDescriptor();
  private final BHDescriptor myBaseRootNamedConceptOrg__BehaviorDescriptor = new BaseRootNamedConceptOrg__BehaviorDescriptor();
  private final BHDescriptor myFareRuleDefinition__BehaviorDescriptor = new FareRuleDefinition__BehaviorDescriptor();
  private final BHDescriptor myBaseUDNamedCriteriaDeclaration__BehaviorDescriptor = new BaseUDNamedCriteriaDeclaration__BehaviorDescriptor();
  private final BHDescriptor myBaseUDNamedIDCriteriaDefinition__BehaviorDescriptor = new BaseUDNamedIDCriteriaDefinition__BehaviorDescriptor();
  private final BHDescriptor myConcessionSelectionCriteriaDef__BehaviorDescriptor = new ConcessionSelectionCriteriaDef__BehaviorDescriptor();
  private final BHDescriptor myCrtLifespanValidationCriteria__BehaviorDescriptor = new CrtLifespanValidationCriteria__BehaviorDescriptor();
  private final BHDescriptor myConcessionSelectionCriterias__BehaviorDescriptor = new ConcessionSelectionCriterias__BehaviorDescriptor();
  private final BHDescriptor myProductSelectionCriteriaDef__BehaviorDescriptor = new ProductSelectionCriteriaDef__BehaviorDescriptor();

  private final long[] myConceptBehaviorIds;

  public BehaviorAspectDescriptor() {
    myConceptBehaviorIds = new long[30];
    myConceptBehaviorIds[0] = 0x9a73ffb2d9f2df5L;
    myConceptBehaviorIds[1] = 0x9a73ffb2d9f2e19L;
    myConceptBehaviorIds[2] = 0x9a73ffb2da4382dL;
    myConceptBehaviorIds[3] = 0x9a73ffb2da5a58cL;
    myConceptBehaviorIds[4] = 0x9a73ffb2da5a88fL;
    myConceptBehaviorIds[5] = 0x9a73ffb2db09a1fL;
    myConceptBehaviorIds[6] = 0x9a73ffb2db09a5aL;
    myConceptBehaviorIds[7] = 0x9a73ffb2db09a76L;
    myConceptBehaviorIds[8] = 0x9a73ffb2db09c52L;
    myConceptBehaviorIds[9] = 0x9a73ffb2db0f562L;
    myConceptBehaviorIds[10] = 0x176a094254900dd2L;
    myConceptBehaviorIds[11] = 0x1c02562723d52abeL;
    myConceptBehaviorIds[12] = 0x30491a7e2ad61471L;
    myConceptBehaviorIds[13] = 0x30491a7e2ade5d01L;
    myConceptBehaviorIds[14] = 0x30491a7e2ae06c3eL;
    myConceptBehaviorIds[15] = 0x59a528db6b3d9dfaL;
    myConceptBehaviorIds[16] = 0x59a528db6b3d9e09L;
    myConceptBehaviorIds[17] = 0x59a528db6b5188cfL;
    myConceptBehaviorIds[18] = 0x59a528db6b5b5e5fL;
    myConceptBehaviorIds[19] = 0x59a528db6b5b5e60L;
    myConceptBehaviorIds[20] = 0x65d53d0d8db56f56L;
    myConceptBehaviorIds[21] = 0x65d53d0d8db70fffL;
    myConceptBehaviorIds[22] = 0x6773d363de8e8fd1L;
    myConceptBehaviorIds[23] = 0x6773d363de94c3dbL;
    myConceptBehaviorIds[24] = 0x7627b8e69aa84752L;
    myConceptBehaviorIds[25] = 0x7627b8e69aa84759L;
    myConceptBehaviorIds[26] = 0x7627b8e69aaa7fe3L;
    myConceptBehaviorIds[27] = 0x7627b8e69aaa8105L;
    myConceptBehaviorIds[28] = 0x7627b8e69aab7381L;
    myConceptBehaviorIds[29] = 0x7627b8e69aab741bL;
  }

  @Deprecated
  @Override
  public BehaviorDescriptor getDescriptor(String fqName) {
    return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
  }

  @Nullable
  @Override
  public BHDescriptor getDescriptor(@NotNull SConceptId conceptId) {
    int behaviorIndex = Arrays.binarySearch(myConceptBehaviorIds, conceptId.getIdValue());
    switch (behaviorIndex) {
      case 0:
        return myServiceProvider__BehaviorDescriptor;
      case 1:
        return myModOfTransportation__BehaviorDescriptor;
      case 2:
        return myRoute__BehaviorDescriptor;
      case 3:
        return myWeekDay__BehaviorDescriptor;
      case 4:
        return myRecurrenceCriteriaDef__BehaviorDescriptor;
      case 5:
        return myConcessionDeclaration__BehaviorDescriptor;
      case 6:
        return myProductDeclaration__BehaviorDescriptor;
      case 7:
        return myProductFamilyDeclaration__BehaviorDescriptor;
      case 8:
        return myLocationDeclaration__BehaviorDescriptor;
      case 9:
        return myLocationReference__BehaviorDescriptor;
      case 10:
        return myBaseConceptOrgCollectionBlock__BehaviorDescriptor;
      case 11:
        return myBaseConceptOrgCollectionWithUniqueID__BehaviorDescriptor;
      case 12:
        return myBaseFloatFunctionDefinition__BehaviorDescriptor;
      case 13:
        return myUDFReference__BehaviorDescriptor;
      case 14:
        return myUDCReference__BehaviorDescriptor;
      case 15:
        return myConstantFloatValue__BehaviorDescriptor;
      case 16:
        return myBaseConstant__BehaviorDescriptor;
      case 17:
        return myConstantTypedVarDeclaration__BehaviorDescriptor;
      case 18:
        return myConstantFloatVarDeclaration__BehaviorDescriptor;
      case 19:
        return myConstantPointToPointVarDeclaration__BehaviorDescriptor;
      case 20:
        return myBaseNumericFunctionDef__BehaviorDescriptor;
      case 21:
        return myFloatFarePriceCalculationFct__BehaviorDescriptor;
      case 22:
        return myBaseRootNamedConceptOrg__BehaviorDescriptor;
      case 23:
        return myFareRuleDefinition__BehaviorDescriptor;
      case 24:
        return myBaseUDNamedCriteriaDeclaration__BehaviorDescriptor;
      case 25:
        return myBaseUDNamedIDCriteriaDefinition__BehaviorDescriptor;
      case 26:
        return myConcessionSelectionCriteriaDef__BehaviorDescriptor;
      case 27:
        return myCrtLifespanValidationCriteria__BehaviorDescriptor;
      case 28:
        return myConcessionSelectionCriterias__BehaviorDescriptor;
      case 29:
        return myProductSelectionCriteriaDef__BehaviorDescriptor;
      default:
        return null;
    }
  }
}
