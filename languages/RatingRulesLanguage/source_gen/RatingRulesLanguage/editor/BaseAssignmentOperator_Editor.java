package RatingRulesLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.nodeEditor.cellMenu.DefaultChildSubstituteInfo;
import jetbrains.mps.nodeEditor.cells.EditorCell_Error;
import jetbrains.mps.nodeEditor.cellMenu.CompositeSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.BasicCellContext;
import jetbrains.mps.nodeEditor.cellMenu.SubstituteInfoPartExt;
import jetbrains.mps.lang.editor.generator.internal.AbstractCellMenuPart_ReplaceNode_CustomNodeConcept;

public class BaseAssignmentOperator_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_2uzpmt_a(editorContext, node);
  }
  private EditorCell createCollection_2uzpmt_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_2uzpmt_a");
    editorCell.setBig(true);
    editorCell.addEditorCell(this.createRefNode_2uzpmt_a0(editorContext, node));
    editorCell.addEditorCell(this.createError_2uzpmt_b0(editorContext, node));
    return editorCell;
  }
  private EditorCell createRefNode_2uzpmt_a0(EditorContext editorContext, SNode node) {
    SingleRoleCellProvider provider = new BaseAssignmentOperator_Editor.leftSingleRoleHandler_2uzpmt_a0(node, MetaAdapterFactory.getContainmentLink(0xfffd25317c948b3L, 0x9419ce44b0a40631L, 0x65d53d0d8db5731eL, 0x65d53d0d8db57321L, "left"), editorContext);
    return provider.createCell();
  }
  private class leftSingleRoleHandler_2uzpmt_a0 extends SingleRoleCellProvider {
    public leftSingleRoleHandler_2uzpmt_a0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(ownerNode, containmentLink, context);
    }
    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = super.createChildCell(child);
      installCellInfo(child, editorCell);
      return editorCell;
    }
    private void installCellInfo(SNode child, EditorCell editorCell) {
      editorCell.setSubstituteInfo(new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext));
      if (editorCell.getRole() == null) {
        editorCell.setRole("left");
      }
      LeftOperand_BaseAssignment_Action.setCellActions(editorCell, myOwnerNode, myEditorContext);
    }
    @Override
    protected EditorCell createEmptyCell() {
      EditorCell editorCell = super.createEmptyCell();
      editorCell.setCellId("empty_left");
      installCellInfo(null, editorCell);
      return editorCell;
    }
    protected String getNoTargetText() {
      return "<no left>";
    }
  }
  private EditorCell createError_2uzpmt_b0(EditorContext editorContext, SNode node) {
    EditorCell_Error editorCell = new EditorCell_Error(editorContext, node, " ");
    editorCell.setCellId("Error_2uzpmt_b0");
    Operation_symbol_Action.setCellActions(editorCell, node, editorContext);
    editorCell.setSubstituteInfo(new CompositeSubstituteInfo(editorContext, new BasicCellContext(node), new SubstituteInfoPartExt[]{new BaseAssignmentOperator_Editor.ReplaceWith_BaseAssignmentOperator_cellMenu_2uzpmt_a0b0()}));
    return editorCell;
  }
  public static class ReplaceWith_BaseAssignmentOperator_cellMenu_2uzpmt_a0b0 extends AbstractCellMenuPart_ReplaceNode_CustomNodeConcept {
    public ReplaceWith_BaseAssignmentOperator_cellMenu_2uzpmt_a0b0() {
    }
    public String getReplacementConceptName() {
      return "RatingRulesLanguage.structure.BaseAssignmentOperator";
    }
  }
}
