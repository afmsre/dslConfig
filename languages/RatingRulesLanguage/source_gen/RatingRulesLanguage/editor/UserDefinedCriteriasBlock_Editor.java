package RatingRulesLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.MPSFonts;
import jetbrains.mps.nodeEditor.BlockCells;
import jetbrains.mps.nodeEditor.cells.EditorCell_Indent;
import jetbrains.mps.baseLanguage.editor.BaseLanguageStyle_StyleSheet;
import jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.nodeEditor.cellMenu.DefaultChildSubstituteInfo;

public class UserDefinedCriteriasBlock_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_82q66i_a(editorContext, node);
  }
  private EditorCell createCollection_82q66i_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_82q66i_a");
    editorCell.setBig(true);
    editorCell.addEditorCell(this.createComponent_82q66i_a0(editorContext, node));
    editorCell.addEditorCell(this.createCollection_82q66i_b0(editorContext, node));
    return editorCell;
  }
  private EditorCell createComponent_82q66i_a0(EditorContext editorContext, SNode node) {
    EditorCell editorCell = editorContext.getCellFactory().createEditorComponentCell(node, "jetbrains.mps.lang.core.editor.alias");
    Style style = new StyleImpl();
    ConstantsStyle_StyleSheet.apply_MyOrgSegmentsAlias(style, editorCell);
    style.set(StyleAttributes.INDENT_LAYOUT_NEW_LINE, 0, true);
    editorCell.getStyle().putAll(style);
    return editorCell;
  }
  private EditorCell createCollection_82q66i_b0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(editorContext, node);
    editorCell.setCellId("Collection_82q66i_b0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(this.createCollection_82q66i_a1a(editorContext, node));
    editorCell.addEditorCell(this.createCollection_82q66i_b1a(editorContext, node));
    if (renderingCondition_82q66i_a2b0(node, editorContext)) {
      editorCell.addEditorCell(this.createConstant_82q66i_c1a(editorContext, node));
    }
    return editorCell;
  }
  private EditorCell createCollection_82q66i_a1a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_82q66i_a1a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    if (renderingCondition_82q66i_a0a1a(node, editorContext)) {
      editorCell.addEditorCell(this.createConstant_82q66i_a0b0(editorContext, node));
    }
    return editorCell;
  }
  private EditorCell createConstant_82q66i_a0b0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "{");
    editorCell.setCellId("Constant_82q66i_a0b0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.MATCHING_LABEL, 0, "brace");
    style.set(StyleAttributes.INDENT_LAYOUT_NO_WRAP, 0, true);
    style.set(StyleAttributes.FONT_STYLE, 0, MPSFonts.PLAIN);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private static boolean renderingCondition_82q66i_a0a1a(SNode node, EditorContext editorContext) {
    return BlockCells.useBraces();
  }
  private EditorCell createCollection_82q66i_b1a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_82q66i_b1a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(this.createIndentCell_82q66i_a1b0(editorContext, node));
    editorCell.addEditorCell(this.createCollection_82q66i_b1b0(editorContext, node));
    return editorCell;
  }
  private EditorCell createIndentCell_82q66i_a1b0(EditorContext editorContext, SNode node) {
    EditorCell_Indent editorCell = new EditorCell_Indent(editorContext, node);
    return editorCell;
  }
  private EditorCell createCollection_82q66i_b1b0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(editorContext, node);
    editorCell.setCellId("Collection_82q66i_b1b0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, 0, false);
    editorCell.getStyle().putAll(style);
    editorCell.setFoldable(true);
    editorCell.addEditorCell(this.createConstant_82q66i_a1b1a(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_82q66i_b1b1a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_82q66i_c1b1a(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_82q66i_d1b1a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_82q66i_e1b1a(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_82q66i_f1b1a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_82q66i_g1b1a(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_82q66i_h1b1a(editorContext, node));
    editorCell.addEditorCell(this.createConstant_82q66i_i1b1a(editorContext, node));
    editorCell.addEditorCell(this.createRefNode_82q66i_j1b1a(editorContext, node));
    return editorCell;
  }
  private EditorCell createConstant_82q66i_a1b1a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "");
    editorCell.setCellId("Constant_82q66i_a1b1a");
    Style style = new StyleImpl();
    BaseLanguageStyle_StyleSheet.apply_Annotation(style, editorCell);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_82q66i_b1b1a(EditorContext editorContext, SNode node) {
    SingleRoleCellProvider provider = new UserDefinedCriteriasBlock_Editor.LocationCriteriasSingleRoleHandler_82q66i_b1b1a(node, MetaAdapterFactory.getContainmentLink(0xfffd25317c948b3L, 0x9419ce44b0a40631L, 0x9a73ffb2db612fdL, 0x9a73ffb2db61319L, "LocationCriterias"), editorContext);
    return provider.createCell();
  }
  private class LocationCriteriasSingleRoleHandler_82q66i_b1b1a extends SingleRoleCellProvider {
    public LocationCriteriasSingleRoleHandler_82q66i_b1b1a(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(ownerNode, containmentLink, context);
    }
    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = super.createChildCell(child);
      installCellInfo(child, editorCell);
      return editorCell;
    }
    private void installCellInfo(SNode child, EditorCell editorCell) {
      editorCell.setSubstituteInfo(new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext));
      if (editorCell.getRole() == null) {
        editorCell.setRole("LocationCriterias");
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      EditorCell editorCell = super.createEmptyCell();
      editorCell.setCellId("empty_LocationCriterias");
      installCellInfo(null, editorCell);
      return editorCell;
    }
    protected String getNoTargetText() {
      return "<no LocationCriterias>";
    }
  }
  private EditorCell createConstant_82q66i_c1b1a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "");
    editorCell.setCellId("Constant_82q66i_c1b1a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_82q66i_d1b1a(EditorContext editorContext, SNode node) {
    SingleRoleCellProvider provider = new UserDefinedCriteriasBlock_Editor.RecurrenceCriteriasSingleRoleHandler_82q66i_d1b1a(node, MetaAdapterFactory.getContainmentLink(0xfffd25317c948b3L, 0x9419ce44b0a40631L, 0x9a73ffb2db612fdL, 0x9a73ffb2db6131cL, "RecurrenceCriterias"), editorContext);
    return provider.createCell();
  }
  private class RecurrenceCriteriasSingleRoleHandler_82q66i_d1b1a extends SingleRoleCellProvider {
    public RecurrenceCriteriasSingleRoleHandler_82q66i_d1b1a(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(ownerNode, containmentLink, context);
    }
    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = super.createChildCell(child);
      installCellInfo(child, editorCell);
      return editorCell;
    }
    private void installCellInfo(SNode child, EditorCell editorCell) {
      editorCell.setSubstituteInfo(new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext));
      if (editorCell.getRole() == null) {
        editorCell.setRole("RecurrenceCriterias");
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      EditorCell editorCell = super.createEmptyCell();
      editorCell.setCellId("empty_RecurrenceCriterias");
      installCellInfo(null, editorCell);
      return editorCell;
    }
    protected String getNoTargetText() {
      return "<no RecurrenceCriterias>";
    }
  }
  private EditorCell createConstant_82q66i_e1b1a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "");
    editorCell.setCellId("Constant_82q66i_e1b1a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_82q66i_f1b1a(EditorContext editorContext, SNode node) {
    SingleRoleCellProvider provider = new UserDefinedCriteriasBlock_Editor.TransferAgreementSelectionCriteriasSingleRoleHandler_82q66i_f1b1a(node, MetaAdapterFactory.getContainmentLink(0xfffd25317c948b3L, 0x9419ce44b0a40631L, 0x9a73ffb2db612fdL, 0x65d53d0d8db56f28L, "TransferAgreementSelectionCriterias"), editorContext);
    return provider.createCell();
  }
  private class TransferAgreementSelectionCriteriasSingleRoleHandler_82q66i_f1b1a extends SingleRoleCellProvider {
    public TransferAgreementSelectionCriteriasSingleRoleHandler_82q66i_f1b1a(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(ownerNode, containmentLink, context);
    }
    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = super.createChildCell(child);
      installCellInfo(child, editorCell);
      return editorCell;
    }
    private void installCellInfo(SNode child, EditorCell editorCell) {
      editorCell.setSubstituteInfo(new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext));
      if (editorCell.getRole() == null) {
        editorCell.setRole("TransferAgreementSelectionCriterias");
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      EditorCell editorCell = super.createEmptyCell();
      editorCell.setCellId("empty_TransferAgreementSelectionCriterias");
      installCellInfo(null, editorCell);
      return editorCell;
    }
    protected String getNoTargetText() {
      return "<no TransferAgreementSelectionCriterias>";
    }
  }
  private EditorCell createConstant_82q66i_g1b1a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "");
    editorCell.setCellId("Constant_82q66i_g1b1a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_82q66i_h1b1a(EditorContext editorContext, SNode node) {
    SingleRoleCellProvider provider = new UserDefinedCriteriasBlock_Editor.ConcessionSelectionCriteriasSingleRoleHandler_82q66i_h1b1a(node, MetaAdapterFactory.getContainmentLink(0xfffd25317c948b3L, 0x9419ce44b0a40631L, 0x9a73ffb2db612fdL, 0x7627b8e69aab73caL, "ConcessionSelectionCriterias"), editorContext);
    return provider.createCell();
  }
  private class ConcessionSelectionCriteriasSingleRoleHandler_82q66i_h1b1a extends SingleRoleCellProvider {
    public ConcessionSelectionCriteriasSingleRoleHandler_82q66i_h1b1a(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(ownerNode, containmentLink, context);
    }
    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = super.createChildCell(child);
      installCellInfo(child, editorCell);
      return editorCell;
    }
    private void installCellInfo(SNode child, EditorCell editorCell) {
      editorCell.setSubstituteInfo(new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext));
      if (editorCell.getRole() == null) {
        editorCell.setRole("ConcessionSelectionCriterias");
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      EditorCell editorCell = super.createEmptyCell();
      editorCell.setCellId("empty_ConcessionSelectionCriterias");
      installCellInfo(null, editorCell);
      return editorCell;
    }
    protected String getNoTargetText() {
      return "<no ConcessionSelectionCriterias>";
    }
  }
  private EditorCell createConstant_82q66i_i1b1a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "");
    editorCell.setCellId("Constant_82q66i_i1b1a");
    editorCell.setDefaultText("");
    return editorCell;
  }
  private EditorCell createRefNode_82q66i_j1b1a(EditorContext editorContext, SNode node) {
    SingleRoleCellProvider provider = new UserDefinedCriteriasBlock_Editor.ProductSelectionCriteriasSingleRoleHandler_82q66i_j1b1a(node, MetaAdapterFactory.getContainmentLink(0xfffd25317c948b3L, 0x9419ce44b0a40631L, 0x9a73ffb2db612fdL, 0x7627b8e69aab74beL, "ProductSelectionCriterias"), editorContext);
    return provider.createCell();
  }
  private class ProductSelectionCriteriasSingleRoleHandler_82q66i_j1b1a extends SingleRoleCellProvider {
    public ProductSelectionCriteriasSingleRoleHandler_82q66i_j1b1a(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(ownerNode, containmentLink, context);
    }
    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = super.createChildCell(child);
      installCellInfo(child, editorCell);
      return editorCell;
    }
    private void installCellInfo(SNode child, EditorCell editorCell) {
      editorCell.setSubstituteInfo(new DefaultChildSubstituteInfo(myOwnerNode, myContainmentLink.getDeclarationNode(), myEditorContext));
      if (editorCell.getRole() == null) {
        editorCell.setRole("ProductSelectionCriterias");
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      EditorCell editorCell = super.createEmptyCell();
      editorCell.setCellId("empty_ProductSelectionCriterias");
      installCellInfo(null, editorCell);
      return editorCell;
    }
    protected String getNoTargetText() {
      return "<no ProductSelectionCriterias>";
    }
  }
  private EditorCell createConstant_82q66i_c1a(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "}");
    editorCell.setCellId("Constant_82q66i_c1a");
    Style style = new StyleImpl();
    style.set(StyleAttributes.MATCHING_LABEL, 0, "brace");
    style.set(StyleAttributes.INDENT_LAYOUT_NO_WRAP, 0, true);
    style.set(StyleAttributes.FONT_STYLE, 0, MPSFonts.PLAIN);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }
  private static boolean renderingCondition_82q66i_a2b0(SNode node, EditorContext editorContext) {
    return BlockCells.useBraces();
  }
}
