package RatingRulesLanguage.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.typesystem.inference.EquationInfo;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class typeof_ConstantPointToPointVarDeclaration_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_ConstantPointToPointVarDeclaration_InferenceRule() {
  }
  public void applyRule(final SNode constantPointToPointVarDeclaration, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    {
      SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(constantPointToPointVarDeclaration, MetaAdapterFactory.getContainmentLink(0xfffd25317c948b3L, 0x9419ce44b0a40631L, 0x59a528db6b5188c6L, 0x59a528db6b5188cbL, "initializer"));
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:fa4cac9c-354f-476a-9979-7d307c1ac40b(RatingRulesLanguage.typesystem)", "6459614163397287888", 0, null);
      typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:fa4cac9c-354f-476a-9979-7d307c1ac40b(RatingRulesLanguage.typesystem)", "6459614163397287033", true), (SNode) typeCheckingContext.typeOf(SLinkOperations.getTarget(constantPointToPointVarDeclaration, MetaAdapterFactory.getContainmentLink(0xfffd25317c948b3L, 0x9419ce44b0a40631L, 0x59a528db6b5188c6L, 0x59a528db6b5188cbL, "initializer")), "r:fa4cac9c-354f-476a-9979-7d307c1ac40b(RatingRulesLanguage.typesystem)", "3479341316311731957", true), _info_12389875345);
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return MetaAdapterFactory.getConcept(0xfffd25317c948b3L, 0x9419ce44b0a40631L, 0x59a528db6b5b5e60L, "RatingRulesLanguage.structure.ConstantPointToPointVarDeclaration");
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }
}
